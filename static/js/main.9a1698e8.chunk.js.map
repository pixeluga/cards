{"version":3,"sources":["components/Loader.js","components/Toggle.js","components/Sorting.js","components/OneCard/ImagesCarousel.js","components/OneCard/Images.js","components/OneCard/Template1.js","components/OneCard/Template2.js","components/OneCard/Template3.js","components/OneCard/index.js","instruments/index.js","components/Feed/index.js","App.js","serviceWorker.js","index.js","logo.svg","loading.gif"],"names":["Loader","react_default","a","createElement","className","alt","height","src","loading","width","React","Component","Toggle","state","newTemplate","_this","props","template","_updateNewTemp","value","_updateTemp","handleChange","event","setState","target","classes","this","root","FormControl_default","formControl","component","FormLabel_default","RadioGroup_default","row","aria-label","group","name","onChange","FormControlLabel_default","control","Radio_default","label","withStyles","display","padding","margin","Sorting","_updateNewSort","_this$props","_updateSorting","type","split","reverse","join","textContent","sortingButtons","index_es","button","color","variant","onClick","text-align","ImagesCarousel","activeStep","handleNext","prevState","handleBack","images","maxSteps","length","imgContainer","img","MobileStepper_default","backButton","Button_default","disabled","size","mobileStepper","nextButton","position","steps","maxHeight","overflow","maxWidth","Images","emptyImg","cardMedia","image","title","OneCard_ImagesCarousel","Fragment","propTypes","PropTypes","object","isRequired","card","flexDirection","paddingTop","cardContent","flexGrow","price","area","concat","description","fullAddress","full_address","item","key","id","lg","md","sm","OneCard_Images","currency_format_default","thousandSeparator","displayType","prefix","cardContentPrice","margin-bottom","z-index","cardContentPriceSpan","margin-top","background-color","OneCard","templateCard","OneCard_Template2","OneCard_Template3","OneCard_Template1","sortByRating","tt","cards","sort","card1","card2","rating","sortByPrice","sortByGroup","theme","layout","Object","defineProperty","marginLeft","spacing","unit","marginRight","breakpoints","up","cardGrid","Loader_Loader","classNames","container","map","OneCard_OneCard","App","cardsArray","isFetching","sortingType","temp","_setFetchingState","_fetchCards","_callee","response","_ref2","regenerator_default","wrap","_context","prev","next","fetch","sent","json","data","stop","toRender","components_Toggle","components_Sorting","Feed","CssBaseline_default","logo","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.9a1698e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport loading from '../loading.gif';\r\n\r\nexport default class Loader extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className = 'loader'>\r\n                <img\r\n                    alt = ''\r\n                    height = '32px'\r\n                    src = { loading }\r\n                    width = '32px'\r\n                />\r\n                <span>Loading...</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst styles = {\r\n    root: {\r\n        display: 'flex',\r\n        padding: '10px',\r\n    },\r\n    formControl: {\r\n        margin: 'auto',\r\n    },\r\n};\r\n\r\nclass Toggle extends React.Component {\r\n    state = {\r\n        newTemplate: this.props.template,\r\n    };\r\n\r\n    _updateNewTemp = (value) => {\r\n        const { _updateTemp } = this.props;\r\n\r\n        _updateTemp(value);\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ newTemplate: event.target.value });\r\n        this._updateNewTemp(event.target.value);\r\n    };\r\n\r\n    render () {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className = { classes.root }>\r\n                <FormControl className = { classes.formControl } component = 'fieldset'>\r\n                    <FormLabel component = 'legend'>Select display type</FormLabel>\r\n                    <RadioGroup\r\n                        row\r\n                        aria-label = 'Select display type'\r\n                        className = { classes.group }\r\n                        name = 'template'\r\n                        value = { this.state.newTemplate }\r\n                        onChange = { this.handleChange }>\r\n\r\n                        <FormControlLabel control = { <Radio /> } label = '1' value = 'temp1' />\r\n                        <FormControlLabel control = { <Radio /> } label = '2' value = 'temp2' />\r\n                        <FormControlLabel control = { <Radio /> } label = '3' value = 'temp3' />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nToggle.propTypes = {\r\n    _updateTemp: PropTypes.func.isRequired,\r\n    classes:     PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Toggle);\r\n","// Core\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n    sortingButtons: {\r\n        margin:       'auto',\r\n        padding:      '10px',\r\n        'text-align': 'center',\r\n    },\r\n    button: {\r\n        margin: '5px',\r\n    },\r\n};\r\n\r\nclass Sorting extends React.Component {\r\n    _updateNewSort = (event) => {\r\n        const { _updateSorting, type } = this.props;\r\n\r\n        if (type === event) {\r\n            const rev = event.split('').reverse().join('');\r\n\r\n            _updateSorting(rev);\r\n        } else {\r\n            _updateSorting(event);\r\n        }\r\n\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this._updateNewSort(event.target.textContent);\r\n    };\r\n\r\n    render () {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className = { classes.sortingButtons }>\r\n                <span>Sort by:</span>\r\n                <Button\r\n                    className = { classes.button }\r\n                    color = 'primary'\r\n                    label = 'price'\r\n                    variant = 'contained'\r\n                    onClick = { this.handleChange }>\r\n            price\r\n                </Button>\r\n                <Button\r\n                    className = { classes.button }\r\n                    color = 'primary'\r\n                    variant = 'contained'\r\n                    onClick = { this.handleChange }>\r\n            rating\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSorting.propTypes = {\r\n    _updateSorting: PropTypes.func.isRequired,\r\n    classes:        PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Sorting);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = {\r\n    imgContainer: {\r\n        maxHeight: 200,\r\n        overflow:  'hidden',\r\n    },\r\n    img: {\r\n        maxWidth: 400,\r\n        overflow: 'hidden',\r\n        display:  'block',\r\n        width:    '100%',\r\n        height:   'auto',\r\n    },\r\n};\r\n\r\nclass ImagesCarousel extends React.Component {\r\n  state = {\r\n      activeStep: 0,\r\n  };\r\n\r\n  handleNext = () => {\r\n      this.setState((prevState) => ({\r\n          activeStep: prevState.activeStep + 1,\r\n      }));\r\n  };\r\n\r\n  handleBack = () => {\r\n      this.setState((prevState) => ({\r\n          activeStep: prevState.activeStep - 1,\r\n      }));\r\n  };\r\n\r\n  render () {\r\n      const { classes, images } = this.props;\r\n      const { activeStep } = this.state;\r\n      const maxSteps = images.length;\r\n\r\n      return (\r\n          <div>\r\n              <div className = { classes.imgContainer }>\r\n                  <img\r\n                      alt = { images[activeStep] }\r\n                      className = { classes.img }\r\n                      src = { images[activeStep] }\r\n                  />\r\n              </div>\r\n              <MobileStepper\r\n                  activeStep = { activeStep }\r\n                  backButton = {\r\n                      <Button\r\n                          disabled = { activeStep === 0 }\r\n                          size = 'small'\r\n                          onClick = { this.handleBack }>\r\n                &lsaquo; Back\r\n                      </Button>\r\n                  }\r\n                  className = { classes.mobileStepper }\r\n                  nextButton = {\r\n                      <Button\r\n                          disabled = { activeStep === maxSteps - 1 }\r\n                          size = 'small'\r\n                          onClick = { this.handleNext }>\r\n                Next &rsaquo;\r\n                      </Button>\r\n                  }\r\n                  position = 'static'\r\n                  steps = { maxSteps }\r\n              />\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nImagesCarousel.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    images:  PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ImagesCarousel);\r\n","// Core\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CardMedia } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Components\r\nimport ImagesCarousel from './ImagesCarousel';\r\n\r\nconst styles = {\r\n    card: {\r\n        height:        '100%',\r\n        display:       'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n};\r\n\r\nfunction Images (props) {\r\n    const { classes } = props;\r\n\r\n    const emptyImg = <CardMedia\r\n        className = { classes.cardMedia }\r\n        image = 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E' // eslint-disable-line max-len\r\n        title = 'No images'\r\n    />;\r\n\r\n    const cardMedia = props.images ?\r\n        props.images.length === 1 ?\r\n            <CardMedia\r\n                alt = { props.images[0] }\r\n                className = { classes.cardMedia }\r\n                image = { props.images[0] }\r\n            /> :\r\n            <ImagesCarousel images = { props.images } /> :\r\n        { emptyImg };\r\n\r\n    return (\r\n        <>\r\n            { cardMedia }\r\n        </>\r\n    );\r\n}\r\n\r\nImages.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Images);\r\n","// Core\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid, Card, CardContent, Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport NumberFormat from 'react-currency-format';\r\n\r\n// Components\r\nimport Images from './Images';\r\n\r\nconst styles = {\r\n    card: {\r\n        height:        '100%',\r\n        display:       'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n};\r\n\r\nfunction Template1 (props) {\r\n    const { classes, card } = props;\r\n\r\n    const price = card.price ? card.price : null;\r\n    const area = card.area ? `${card.area} sq. fr.` : null;\r\n    const description = card.description ? card.description : null;\r\n    const fullAddress = card.full_address ? card.full_address : null;\r\n    const images = card.images ? card.images : null;\r\n\r\n    return (\r\n        <Grid item key = { card.id } lg = { 3 } md = { 4 } sm = { 6 }>\r\n            <Card className = { classes.card }>\r\n\r\n                <Images images = { images } />\r\n\r\n                <CardContent>\r\n                    <Typography\r\n                        component = 'span'>\r\n                        {fullAddress}\r\n                    </Typography>\r\n                    <Typography\r\n                        component = 'p'\r\n                        variant = 'subtitle1'>\r\n                        <NumberFormat\r\n                            thousandSeparator\r\n                            displayType = { 'text' }\r\n                            prefix = { '$' }\r\n                            value = { price }\r\n                        />\r\n                    </Typography>\r\n                    <Typography>\r\n                        {area}\r\n                    </Typography>\r\n                    <Typography\r\n                        component = 'p'>\r\n                        {description}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nTemplate1.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Template1);\r\n","// Core\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid, Card, CardContent, Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport NumberFormat from 'react-currency-format';\r\n\r\n// Components\r\nimport Images from './Images';\r\n\r\nconst styles = {\r\n    card: {\r\n        height:        '100%',\r\n        display:       'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n};\r\n\r\nfunction Template2 (props) {\r\n    const { classes, card } = props;\r\n\r\n    const price = card.price ? card.price : null;\r\n    const area = card.area ? `${card.area} sq. fr.` : null;\r\n    const description = card.description ? card.description : null;\r\n    const fullAddress = card.full_address ? card.full_address : null;\r\n    const images = card.images ? card.images : null;\r\n\r\n    return (\r\n        <Grid item key = { card.id } lg = { 3 } md = { 4 } sm = { 6 }>\r\n            <Card className = { classes.card }>\r\n                <CardContent>\r\n                    <Typography\r\n                        component = 'span'>\r\n                        {fullAddress}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                <Images images = { images } />\r\n\r\n                <CardContent>\r\n                    <Typography\r\n                        component = 'p'\r\n                        variant = 'subtitle1'>\r\n                        <NumberFormat\r\n                            thousandSeparator\r\n                            displayType = { 'text' }\r\n                            prefix = { '$' }\r\n                            value = { price }\r\n                        />\r\n                    </Typography>\r\n                    <Typography>\r\n                        {area}\r\n                    </Typography>\r\n                    <Typography\r\n                        component = 'p'>\r\n                        {description}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nTemplate2.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Template2);\r\n","// Core\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid, Card, CardContent, Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport NumberFormat from 'react-currency-format';\r\n\r\n// Components\r\nimport Images from './Images';\r\n\r\nconst styles = {\r\n    card: {\r\n        height:        '100%',\r\n        display:       'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContentPrice: {\r\n        'margin-bottom': '-65px',\r\n        'z-index':       '1000000000000000',\r\n    },\r\n    cardContentPriceSpan: {\r\n        color:              'white',\r\n        'margin-top':       '10px',\r\n        padding:            '3px',\r\n        'background-color': '#55595c',\r\n    },\r\n};\r\n\r\nfunction Template3 (props) {\r\n    const { classes, card } = props;\r\n\r\n    const price = card.price ? card.price : 0;\r\n    const area = card.area ? `${card.area} sq. fr.` : null;\r\n    const description = card.description ? card.description : null;\r\n    const fullAddress = card.full_address ? card.full_address : null;\r\n    const images = card.images ? card.images : null;\r\n\r\n    return (\r\n        <Grid item key = { card.id } lg = { 3 } md = { 4 } sm = { 6 }>\r\n            <Card className = { classes.card }>\r\n                <CardContent>\r\n                    <Typography\r\n                        component = 'span'>\r\n                        {fullAddress}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                <CardContent className = { classes.cardContentPrice }>\r\n                    <Typography\r\n                        component = 'p'\r\n                        variant = 'subtitle1'>\r\n                        <NumberFormat\r\n                            thousandSeparator\r\n                            className = { classes.cardContentPriceSpan }\r\n                            displayType = { 'text' }\r\n                            prefix = { '$' }\r\n                            value = { price }\r\n                        />\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                <Images images = { images } />\r\n\r\n                <CardContent>\r\n                    <Typography>\r\n                        {area}\r\n                    </Typography>\r\n                    <Typography\r\n                        component = 'p'>\r\n                        {description}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nTemplate3.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Template3);\r\n","// Core\r\nimport React, { Component } from 'react';\r\n\r\n// Components\r\nimport Template1 from './Template1';\r\nimport Template2 from './Template2';\r\nimport Template3 from './Template3';\r\n\r\nexport default class OneCard extends Component {\r\n\r\n    render () {\r\n        const props = this.props;\r\n\r\n        const template = this.props.template ? this.props.template : null;\r\n\r\n        const templateCard = template === 'temp2' ?\r\n            <Template2 card = { props.card } /> :\r\n            template === 'temp3' ?\r\n                <Template3 card = { props.card } /> :\r\n                <Template1 card = { props.card } />;\r\n\r\n        return (\r\n            <>\r\n                { templateCard }\r\n            </>\r\n        );\r\n    }\r\n}\r\n","export const sortByRating = (tt, cards) => {\r\n    if (tt === 0) {\r\n        return cards.sort((card1, card2) => {\r\n            if (card1.rating < card2.rating) {\r\n                return 1;\r\n            } else if (\r\n                card1.rating > card2.rating\r\n            ) {\r\n                return -1;\r\n            }\r\n\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    return cards.sort((card1, card2) => {\r\n        if (card1.rating > card2.rating) {\r\n            return 1;\r\n        } else if (\r\n            card1.rating < card2.rating\r\n        ) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    });\r\n};\r\n\r\nexport const sortByPrice = (tt, cards) => {\r\n    if (tt === 0) {\r\n        return cards.sort((card1, card2) => {\r\n            if (card1.price < card2.price) {\r\n                return 1;\r\n            } else if (\r\n                card1.price > card2.price\r\n            ) {\r\n                return -1;\r\n            }\r\n\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    return cards.sort((card1, card2) => {\r\n        if (card1.price > card2.price) {\r\n            return 1;\r\n        } else if (\r\n            card1.price < card2.price\r\n        ) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    });\r\n};\r\n\r\nexport const sortByGroup = (type, cards) => {\r\n    if (type === 'rating') {\r\n        return sortByRating(0, cards);\r\n    } else if (type === 'gnitar') {\r\n        return sortByRating(1, cards);\r\n    } else if (type === 'price') {\r\n        return sortByPrice(0, cards);\r\n    } else if (type === 'ecirp') {\r\n        return sortByPrice(1, cards);\r\n    }\r\n\r\n    return cards;\r\n};\r\n","// Core\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { Grid } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Components\r\nimport Loader from '../Loader';\r\nimport OneCard from '../OneCard';\r\n\r\n// Instruments\r\nimport { sortByGroup } from '../../instruments';\r\n\r\nconst styles = (theme) => ({\r\n    layout: {\r\n        width:                                                     'auto',\r\n        marginLeft:                                                theme.spacing.unit * 3,\r\n        marginRight:                                               theme.spacing.unit * 3,\r\n        [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n            width:       1100,\r\n            marginLeft:  'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    cardGrid: {\r\n        padding: `${theme.spacing.unit * 8}px 0`,\r\n    },\r\n});\r\n\r\nfunction Album (props) {\r\n\r\n    if (!props.cards) {\r\n        return (\r\n            <Loader />\r\n        );\r\n    }\r\n\r\n    if (props.cards.length === 0) {\r\n        return (\r\n            <div>\r\n                <center>Empty</center>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const { classes, cards, type } = props;\r\n\r\n    return (\r\n        <main>\r\n            <div className = { classNames(classes.layout, classes.cardGrid) }>\r\n                <Grid container spacing = { 40 }>\r\n                    {sortByGroup(type, cards).map((card) => (\r\n                        <OneCard\r\n                            card = { card }\r\n                            key = { card.id }\r\n                            template = { props.template }\r\n                        />\r\n                    ))}\r\n                </Grid>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nAlbum.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Album);\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n// Components\nimport Loader from './components/Loader';\nimport Toggle from './components/Toggle';\nimport Sorting from './components/Sorting';\nimport Feed from './components/Feed';\n\nclass App extends Component {\n    state = {\n        cardsArray:  [],\n        isFetching:  false,\n        template:    'temp1',\n        sortingType: '',\n\n    };\n\n    componentDidMount () {\n        this._fetchCards();\n    }\n\n    _updateTemp = (temp) => {\n        this.setState({ template: temp });\n    };\n    _updateSorting = (type) => {\n        this.setState({ sortingType: type });\n    };\n\n    _setFetchingState = (state) => {\n        this.setState({\n            isFetching: state,\n        });\n    };\n\n    _fetchCards = async () => {\n        this._setFetchingState(true);\n\n        const response = await fetch('https://demo4452328.mockable.io/properties');\n\n        const { data: cardsArray } = await response.json();\n\n        this.setState({\n            cardsArray,\n        });\n\n        this._setFetchingState(false);\n    };\n\n    render () {\n        const toRender = this.state.isFetching ? <Loader /> :\n        <>\n            <Toggle\n                _updateTemp = { this._updateTemp }\n                template = { this.state.template }\n            />\n            <Sorting\n                _updateSorting = { this._updateSorting }\n                type = { this.state.sortingType }\n            />\n            <Feed\n                cards = { this.state.cardsArray }\n                template = { this.state.template }\n                type = { this.state.sortingType }\n            />\n        </>;\n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <div className = 'App'>\n                    <header className = 'App-header'>\n                        <img alt = 'logo' className = 'App-logo' src = { logo } />\n                    Test App\n                    </header>\n\n                    {toRender}\n\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.fcd8d05c.gif\";"],"sourceRoot":""}